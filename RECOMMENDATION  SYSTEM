import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from surprise import Dataset, Reader, SVD
from surprise.model_selection import cross_validate
from surprise import accuracy
from surprise.model_selection import train_test_split as surprise_train_test_split

# Load dataset (replace 'ratings.csv' with your dataset file)
df = pd.read_csv('ratings.csv')

# Display dataset info
display(df.head())

# Define a reader object for Surprise library
reader = Reader(rating_scale=(df['rating'].min(), df['rating'].max()))
data = Dataset.load_from_df(df[['userId', 'movieId', 'rating']], reader)

# Split data into train and test sets
trainset, testset = surprise_train_test_split(data, test_size=0.2, random_state=42)

# Use SVD (Singular Value Decomposition) for collaborative filtering
model = SVD()
model.fit(trainset)

# Make predictions
y_pred = model.test(testset)

# Evaluate model performance
rmse = accuracy.rmse(y_pred)
mae = accuracy.mae(y_pred)
print(f'RMSE: {rmse:.4f}, MAE: {mae:.4f}')

# Function to get top-N recommendations
def get_top_n_recommendations(predictions, n=5):
    top_n = {}
    for uid, iid, true_r, est, _ in predictions:
        if uid not in top_n:
            top_n[uid] = []
        top_n[uid].append((iid, est))
    
    for uid, user_ratings in top_n.items():
        user_ratings.sort(key=lambda x: x[1], reverse=True)
        top_n[uid] = user_ratings[:n]
    
    return top_n

# Get recommendations for all users
top_n_recommendations = get_top_n_recommendations(y_pred, n=5)
print(top_n_recommendations)
